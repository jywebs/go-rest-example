name: Build and Push Docker Image

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
                uses: actions/checkout@v3

            - name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: yourdockerhubusername/go-rest-example:latest
FROM golang:1.20-alpine AS builder
WORKDIR /app
RUN apk add --no-cache git && \
    go install github.com/swaggo/swag/cmd/swag@latest

COPY . .

RUN swag init --parseDependency --parseInternal -g cmd/server/main.go

RUN go mod tidy && \
    go mod verify && \
    go mod download && \
    CGO_ENABLED=0 GOOS=linux go build -o server ./cmd/server

FROM busybox:latest

WORKDIR /app
COPY --from=builder /app/server .
COPY --from=builder /app/docs ./docs

EXPOSE 8080
CMD ["./server"]

WORKDIR /app
# Install required tools
RUN apk add --no-cache git && \
    go install github.com/swaggo/swag/cmd/swag@latest

# Copy source code
COPY . .

# Generate swagger documentation
RUN swag init --parseDependency --parseInternal -g cmd/server/main.go

# Download dependencies, verify and build
RUN go mod tidy && \
    go mod verify && \
    go mod download && \
    CGO_ENABLED=0 GOOS=linux go build -o server ./cmd/server

FROM busybox:latest

WORKDIR /app
# Copy both the server binary and the docs directory
COPY --from=builder /app/server .
COPY --from=builder /app/docs ./docs

EXPOSE 8080
CMD ["./server"]
